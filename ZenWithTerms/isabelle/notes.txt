
definition FiniteMessagesTo :: stpred
  where "FiniteMessagesTo s ≡ ∀n. finite (messagesTo s n)"

definition JoinRequestsAtMostCurrentTerm :: stpred where "JoinRequestsAtMostCurrentTerm s ≡ 
  ∀ m. isJoin m ⟶ m ∈ messages s ⟶ term m ≤ currentTerm s (source m)"

definition JoinRequestsUniquePerTerm :: stpred where "JoinRequestsUniquePerTerm s ≡ 
  ∀ m1 m2. m1 ∈ messages s ⟶ m2 ∈ messages s 
      ⟶ isJoin m1 ⟶ isJoin m2 ⟶ source m1 = source m2 ⟶ term m1 = term m2
      ⟶ m1 = m2"

definition JoinVotesFaithful :: stpred where "JoinVotesFaithful s ≡ 
  ∀ nm nf. nf ∈ joinVotes s nm
      ⟶ (∃ joinPayload. ⦇ source = nf, dest = nm, term = currentTerm s nm, payload = Join joinPayload ⦈ ∈ messages s)"

definition JoinVotesImpliesStartedJoin :: stpred where "JoinVotesImpliesStartedJoin s ≡
  ∀ n. joinVotes s n ≠ {} ⟶ startedJoinSinceLastReboot s n"

definition ElectionWonImpliesStartedJoin :: stpred where "ElectionWonImpliesStartedJoin s ≡
  ∀ n. electionWon s n ⟶ startedJoinSinceLastReboot s n"

definition TheJoinProperty :: stpred where "TheJoinProperty s ≡
  ∀ nm nf. nf ∈ joinVotes s nm
    ⟶ source (TheJoin nf nm s) = nf
      ∧ dest (TheJoin nf nm s) = nm
      ∧ term (TheJoin nf nm s) = currentTerm s nm
      ∧ isJoin (TheJoin nf nm s)
      ∧ TheJoin nf nm s ∈ messages s"

definition MessagePositiveTerm :: stpred where "MessagePositiveTerm s ≡
  ∀m ∈ messages s. term m > 0"

definition TermIncreasedByJoin :: stpred where "TermIncreasedByJoin s ≡
  ∀n. currentTerm s n > 0 ⟶ (∃ m ∈ messages s. isJoin m ∧ currentTerm s n = term m)"

definition LastAcceptedTermInPast :: stpred where "LastAcceptedTermInPast s ≡
  ∀n. lastAcceptedTerm s n ≤ currentTerm s n"

definition LastAcceptedDataSource :: stpred where "LastAcceptedDataSource s ≡
  ∀n. if lastAcceptedTerm s n = 0
        then lastAcceptedVersion       s n = 0
           ∧ lastAcceptedValue         s n = initialValue s
           ∧ lastAcceptedConfiguration s n = initialConfiguration s
        else (∃ m ∈ messages s. isPublishRequest m
                                        ∧ lastAcceptedTerm          s n = term     m
                                        ∧ lastAcceptedVersion       s n = version  m
                                        ∧ lastAcceptedValue         s n = value    m
                                        ∧ lastAcceptedConfiguration s n = config   m)"

definition PublishedConfigurations :: "Node set set stfun" where "PublishedConfigurations s ≡
  insert (initialConfiguration s) (config ` { m ∈ messages s. isPublishRequest m })"

definition PublishedConfigurationsValid :: stpred where "PublishedConfigurationsValid s ≡
  PublishedConfigurations s ⊆ ValidConfigs"

definition CommittedConfigurations :: "Node set set stfun" where "CommittedConfigurations s ≡
  insert (initialConfiguration s)
    { c. (∃ mPub ∈ messages s. isPublishRequest mPub ∧ config mPub = c
           ∧ (∃ mCom ∈ messages s. isCommit mCom ∧ term mCom = term mPub ∧ version  mCom = version  mPub)) }"

definition CommittedConfigurationsPublished :: stpred where "CommittedConfigurationsPublished s ≡
  CommittedConfigurations s ⊆ PublishedConfigurations s"

definition PublishedConfigurationSource :: stpred where "PublishedConfigurationSource s ≡
  ∀n. electionWon s n ⟶ lastPublishedConfiguration s n ∈ PublishedConfigurations s"

definition AcceptedConfigurationSource :: stpred where "AcceptedConfigurationSource s ≡
  ∀n. lastAcceptedConfiguration s n ∈ PublishedConfigurations s"

definition CurrentConfigurationSource :: stpred where "CurrentConfigurationSource s ≡
  ∀n. lastCommittedConfiguration s n ∈ CommittedConfigurations s"

definition CurrentConfigurationMsgSource :: stpred where "CurrentConfigurationMsgSource s ≡
  ∀m ∈ messages s. isPublishRequest m ⟶ commConf m ∈ CommittedConfigurations s"

definition PublicationsInPastTerm :: stpred where "PublicationsInPastTerm s ≡
  ∀m ∈ messages s. isPublishRequest m ⟶ term m ≤ currentTerm s (source m)"

definition PublishRequestVersionPositive :: stpred where "PublishRequestVersionPositive s ≡
  ∀ m ∈ messages s. isPublishRequest m ⟶ 0 < version  m"

definition LeaderHistoryFaithful :: stpred where "LeaderHistoryFaithful s ≡
  ∀n. electionWon s n ⟶ (currentTerm s n, n) ∈ leaderHistory s"

definition LeaderHistoryBounded :: stpred where "LeaderHistoryBounded s ≡
  ∀n tm. (tm, n) ∈ leaderHistory s ⟶ tm ≤ currentTerm s n"

definition PublishRequestFromHistoricalLeader :: stpred where "PublishRequestFromHistoricalLeader s ≡
  ∀m ∈ messages s. isPublishRequest m ⟶ (term m, source m) ∈ leaderHistory s"

definition BasedOnIncreasing :: stpred where "BasedOnIncreasing s ≡
  ∀ tPrev iPrev tCurr iCurr. (TermVersion  tCurr iCurr, TermVersion  tPrev iPrev) ∈ basedOn s
    ⟶ iCurr = Suc iPrev ∧ tPrev ≤ tCurr"

definition PublishRequestBasedOn :: stpred where "PublishRequestBasedOn s ≡
  ∀ m ∈ messages s. isPublishRequest m ⟶ (∃ tiPrev. (TermVersion  (term m) (version  m), tiPrev) ∈ basedOn s)"

definition BasedOnPublishRequest :: stpred where "BasedOnPublishRequest s ≡
  ∀ tiPrev tCurr iCurr. (TermVersion  tCurr iCurr, tiPrev) ∈ basedOn s
    ⟶ (∃ m ∈ messages s. isPublishRequest m ∧ term m = tCurr ∧ version  m = iCurr)"

definition BasedOnBasedOn :: stpred where "BasedOnBasedOn s ≡
  ∀ tiCurr tPrev iPrev. (tiCurr, TermVersion  tPrev iPrev) ∈ basedOn s ⟶ 0 < iPrev
    ⟶ (∃ tiPrevPrev. (TermVersion  tPrev iPrev, tiPrevPrev) ∈ basedOn s)"

definition ElectionWonQuorumBelow :: "nat ⇒ stpred" where "ElectionWonQuorumBelow termBound s ≡
  ∀ n. currentTerm s n < termBound ⟶ electionWon s n
    ⟶ IsQuorum (joinVotes s n) (lastCommittedConfiguration s n)
      ∧ IsQuorum (joinVotes s n) (lastAcceptedConfiguration s n)"

definition OneMasterPerTermBelow :: "nat ⇒ stpred" where "OneMasterPerTermBelow termBound s ≡
  ∀ n1 n2 tm. tm < termBound ⟶ (tm, n1) ∈ leaderHistory s ⟶ (tm, n2) ∈ leaderHistory s
    ⟶ n1 = n2"

definition PublishRequestImpliesElectionWonBelow :: "nat ⇒ stpred" where "PublishRequestImpliesElectionWonBelow termBound s ≡
  ∀ m ∈ messages s. term m < termBound ⟶ isPublishRequest m ⟶ currentTerm s (source m) = term m
    ⟶ startedJoinSinceLastReboot s (source m) ⟶ electionWon s (source m)"

definition PublishRequestImpliesQuorumBelow :: "nat ⇒ stpred" where "PublishRequestImpliesQuorumBelow termBound s ≡
  ∀ m ∈ messages s. term m < termBound ⟶ isPublishRequest m ⟶ currentTerm s (source m) = term m ⟶ electionWon s (source m)
               ⟶ IsQuorum (joinVotes s (source m)) (config m)
                 ∧ IsQuorum (joinVotes s (source m)) (commConf m)"

definition PublishRequestSentByMasterBelow :: "nat ⇒ stpred" where "PublishRequestSentByMasterBelow termBound s ≡
  ∀ m n. m ∈ messages s ⟶ term m = currentTerm s n ⟶ term m < termBound ⟶ isPublishRequest m ⟶ electionWon s n
    ⟶ n = source m"

definition EndOfTermIsPermanentBelow :: "nat ⇒ stpred" where "EndOfTermIsPermanentBelow termBound s ≡
  ∀ n. (currentTerm s n, n) ∈ leaderHistory s ⟶ currentTerm s n < termBound ⟶ startedJoinSinceLastReboot s n ⟶ electionWon s n"

definition PublishRequestVersionAtMostSenderBelow :: "nat ⇒ stpred" where "PublishRequestVersionAtMostSenderBelow termBound s ≡
  ∀ m ∈ messages s. isPublishRequest m ⟶ term m < termBound ⟶ msgTermVersion  m ≤ termVersion  (source m) s"

definition PublishRequestsUniquePerTermVersionBelow :: "nat ⇒ stpred" where "PublishRequestsUniquePerTermVersionBelow termBound s ≡
  ∀ m1 m2. m1 ∈ messages s ⟶ m2 ∈ messages s ⟶ isPublishRequest m1 ⟶ isPublishRequest m2
    ⟶ term m1 < termBound ⟶ term m1 = term m2 ⟶ version  m1 = version  m2
    ⟶ payload m1 = payload m2"

definition BasedOnUniqueBelow :: "nat ⇒ stpred" where "BasedOnUniqueBelow termBound s ≡
  ∀ tiPrev1 tiPrev2 tCurr iCurr. tCurr < termBound
      ⟶ (TermVersion  tCurr iCurr, tiPrev1) ∈ basedOn s ⟶ (TermVersion  tCurr iCurr, tiPrev2) ∈ basedOn s
      ⟶ tiPrev1 = tiPrev2"

definition LeaderMustAcceptItsPublishRequestsBelow :: "nat ⇒ stpred" where "LeaderMustAcceptItsPublishRequestsBelow termBound s ≡
  ∀ m ∈ messages s. isPublishRequest m ⟶ lastAcceptedVersion  s (source m) = lastPublishedVersion  s (source m)
                      ⟶ term m = currentTerm s (source m) ⟶ term m < termBound ⟶ electionWon s (source m)
       ⟶ lastAcceptedTerm s (source m) = currentTerm s (source m)"

definition PublishRequestsContiguousWithinTermBelow :: "nat ⇒ stpred" where "PublishRequestsContiguousWithinTermBelow termBound s ≡
  ∀ m1 m2. m1 ∈ messages s ⟶ m2 ∈ messages s ⟶ isPublishRequest m1 ⟶ isPublishRequest m2
    ⟶ term m1 = term m2 ⟶ term m1 < termBound ⟶ version  m1 < version  m2
    ⟶ (TermVersion  (term m2) (version  m2), TermVersion  (term m2) (version  m2 - 1)) ∈ basedOn s"

definition NewLeaderHasExpectedLastPublishedVersion :: stpred where "NewLeaderHasExpectedLastPublishedVersion s ≡
  ∀ n. electionWon s n ⟶ lastAcceptedTerm s n ≠ currentTerm s n
        ⟶ lastPublishedVersion s n ∈ { lastAcceptedVersion s n, Suc (lastAcceptedVersion s n) }"

definition NewLeaderSentNoMessagesYetBelow :: "nat ⇒ stpred" where "NewLeaderSentNoMessagesYetBelow termBound s ≡
  ∀ n m. electionWon s n ⟶ lastAcceptedTerm s n ≠ currentTerm s n ⟶ lastAcceptedVersion s n = lastPublishedVersion s n ⟶ currentTerm s n < termBound
    ⟶ m ∈ messages s ⟶ isPublishRequest m ⟶ term m ≠ currentTerm s n"

definition NewLeaderCanOnlySendOneMessageBelow :: "nat ⇒ stpred" where "NewLeaderCanOnlySendOneMessageBelow termBound s ≡
  ∀ m ∈ messages s. isPublishRequest m ⟶ term m < termBound
    ⟶ term m = currentTerm s (source m)
    ⟶ electionWon s (source m)
    ⟶ currentTerm s (source m) ≠ lastAcceptedTerm s (source m)
    ⟶ version m = lastPublishedVersion s (source m)"

definition LeaderCannotPublishWithoutAcceptingPreviousRequestNEWBelow :: "nat ⇒ stpred" where "LeaderCannotPublishWithoutAcceptingPreviousRequestNEWBelow termBound s ≡
  ∀ m ∈ messages s. isPublishRequest m ⟶ term m < termBound ⟶ term m = currentTerm s (source m)
    ⟶ electionWon s (source m)
    ⟶ version m ≤ Suc (lastAcceptedTerm s (source m))"


definition LeaderCannotPublishWithoutAcceptingPreviousRequestBelow :: "nat ⇒ stpred" where "LeaderCannotPublishWithoutAcceptingPreviousRequestBelow termBound s ≡
  ∀ n. electionWon s n ⟶ currentTerm s n < termBound ⟶ lastPublishedVersion s n ∈ {lastAcceptedVersion s n, Suc (lastAcceptedVersion s n)}"

definition LastPublishedVersionImpliesLastPublishedConfigurationBelow :: "nat ⇒ stpred" where "LastPublishedVersionImpliesLastPublishedConfigurationBelow termBound s ≡
  ∀ m ∈ messages s. isPublishRequest m ⟶ term m < termBound
    ⟶ term m = currentTerm s (source m)
    ⟶ electionWon s (source m)
    ⟶ version m = lastPublishedVersion s (source m)
    ⟶ config m = lastPublishedConfiguration s (source m)"

definition LastAcceptedConfigurationEitherCommittedOrPublishedBelow :: "nat ⇒ stpred" where "LastAcceptedConfigurationEitherCommittedOrPublishedBelow termBound s ≡
  ∀n. electionWon s n ⟶ currentTerm s n < termBound ⟶ lastAcceptedConfiguration s n ∈ { lastCommittedConfiguration s n, lastPublishedConfiguration s n }"
